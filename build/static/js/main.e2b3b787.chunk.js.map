{"version":3,"sources":["component/ContactList/ContactList.jsx","component/Form/Form.jsx","component/Filter/Filter.jsx","component/App/App.jsx","index.js","component/Form/Form.module.css","component/ContactList/ContactList.module.css","component/Filter/Filter.module.css"],"names":["ContactList","contacts","onDeleteContact","className","s","list","map","id","name","number","listItem","listItemText","button","type","onClick","Form","onSubmit","useState","setName","setNumber","form","e","preventDefault","label","input","value","pattern","title","required","onChange","currentTarget","Filter","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","window","localStorage","getItem","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","find","alert","newContact","uuidv4","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e2b3b787.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <p className={s.listItemText}>\r\n            {name}: <span className={s.listItemText}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import React, { useState } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const handleNumberChange = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const handleAddContact = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleAddContact}>\r\n        <label className={s.label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={handleNameChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Form from '../Form/Form';\r\nimport Filter from '../Filter/Filter';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const parsedContacts = JSON.parse(window.localStorage.getItem('contacts'));\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (name, number) => {\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts([newContact, ...contacts]);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <Form onSubmit={addContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__21nEZ\",\"label\":\"Form_label__LrF1H\",\"input\":\"Form_input__2C4JX\",\"button\":\"Form_button__-PEUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__axYCk\",\"listItem\":\"ContactList_listItem__dc7qy\",\"listItemText\":\"ContactList_listItemText__2zbYi\",\"button\":\"ContactList_button__pes2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MUDB\",\"input\":\"Filter_input__jEoY6\"};"],"sourceRoot":""}
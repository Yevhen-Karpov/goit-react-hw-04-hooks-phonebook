(this["webpackJsonpgoit-react-hw-04-phonebook"]=this["webpackJsonpgoit-react-hw-04-phonebook"]||[]).push([[0],{16:function(t,e,n){},17:function(t,e,n){"use strict";n.r(e);var a=n(1),c=n.n(a),s=n(9),r=n.n(s),o=n(10),i=n(3),l=n(19),u=n(4),b=n.n(u),j=n(0);function m(t){var e=t.contacts,n=t.onDeleteContact;return Object(j.jsx)("ul",{className:b.a.list,children:e.map((function(t){var e=t.id,a=t.name,c=t.number;return Object(j.jsxs)("li",{className:b.a.listItem,children:[Object(j.jsxs)("p",{className:b.a.listItemText,children:[a,": ",Object(j.jsx)("span",{className:b.a.listItemText,children:c})]}),Object(j.jsx)("button",{className:b.a.button,type:"button",onClick:function(){return n(e)},children:"Delete"})]},e)}))})}var d=n(2),O=n.n(d);function h(t){var e=t.onSubmit,n=Object(a.useState)(""),c=Object(i.a)(n,2),s=c[0],r=c[1],o=Object(a.useState)(""),l=Object(i.a)(o,2),u=l[0],b=l[1];return Object(j.jsx)("div",{children:Object(j.jsxs)("form",{className:O.a.form,onSubmit:function(t){t.preventDefault(),e(s,u),r(""),b("")},children:[Object(j.jsxs)("label",{className:O.a.label,children:["Name",Object(j.jsx)("br",{}),Object(j.jsx)("input",{className:O.a.input,type:"text",name:"name",value:s,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,onChange:function(t){r(t.currentTarget.value)}})]}),Object(j.jsxs)("label",{className:O.a.label,children:["Number",Object(j.jsx)("br",{}),Object(j.jsx)("input",{className:O.a.input,type:"tel",name:"number",value:u,pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,onChange:function(t){b(t.currentTarget.value)}})]}),Object(j.jsx)("button",{className:O.a.button,type:"submit",children:"Add contact"})]})})}var p=n(8),f=n.n(p);function x(t){var e=t.value,n=t.onChange;return Object(j.jsxs)("label",{className:f.a.label,children:["Find contacts by name",Object(j.jsx)("input",{className:f.a.input,type:"text",value:e,onChange:n})]})}function _(){var t=Object(a.useState)([]),e=Object(i.a)(t,2),n=e[0],c=e[1],s=Object(a.useState)(""),r=Object(i.a)(s,2),u=r[0],b=r[1];Object(a.useEffect)((function(){var t=JSON.parse(window.localStorage.getItem("contacts"));t&&c(t)}),[]),Object(a.useEffect)((function(){window.localStorage.setItem("contacts",JSON.stringify(n))}),[n]);var d=function(){var t=u.toLowerCase();return n.filter((function(e){return e.name.toLowerCase().includes(t)}))}();return Object(j.jsxs)(j.Fragment,{children:[Object(j.jsx)("h1",{children:"Phonebook"}),Object(j.jsx)(h,{onSubmit:function(t,e){if(n.find((function(e){return e.name===t})))alert("".concat(t," is already in contacts."));else{var a={id:Object(l.a)(),name:t,number:e};c([a].concat(Object(o.a)(n)))}}}),Object(j.jsx)("h2",{children:"Contacts"}),Object(j.jsx)(x,{value:u,onChange:function(t){b(t.currentTarget.value)}}),Object(j.jsx)(m,{contacts:d,onDeleteContact:function(t){c(n.filter((function(e){return e.id!==t})))}})]})}n(16);r.a.render(Object(j.jsx)(c.a.StrictMode,{children:Object(j.jsx)(_,{})}),document.getElementById("root"))},2:function(t,e,n){t.exports={form:"Form_form__2qeiG",label:"Form_label__3ihlF",input:"Form_input__2i1Ps",button:"Form_button__1nAV2"}},4:function(t,e,n){t.exports={list:"ContactList_list__30NGv",listItem:"ContactList_listItem__1O6zl",listItemText:"ContactList_listItemText__2dcIe",button:"ContactList_button__1sS6o"}},8:function(t,e,n){t.exports={label:"Filter_label__1SI_3",input:"Filter_input__1KDH8"}}},[[17,1,2]]]);
//# sourceMappingURL=main.9d2db925.chunk.js.map